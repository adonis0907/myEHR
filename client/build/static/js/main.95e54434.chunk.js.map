{"version":3,"sources":["assets/img/Logo.png","assets/img/backgroundImage2.jpg","components/Grid/index.js","pages/Landing/Landing.js","components/Forms/index.js","utils/API.js","Auth.js","pages/SignIn/SignIn.js","pages/SignUp/SignUp.js","components/PatientList/index.js","components/PatientHandler/index.js","pages/Patients/Patients.js","utils/CustomHooks.js","utils/PatientContext.js","components/GeneralInfo/index.js","components/HealthCard/index.js","components/Conditions/index.js","components/Medications/index.js","components/NewContact/index.js","components/Contacts/index.js","pages/EHR/EHR.js","pages/Contacts/Contacts.js","components/Navbar/index.js","ProtectedRoute.js","App.js","registerServiceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Container","_ref","classes","children","react_default","a","createElement","className","concat","Row","_ref2","Col","_ref3","size","split","map","join","Collapse","_ref4","navState","id","Landing","user","localStorage","getItem","style","background","Grid_Container","Grid_Row","Grid_Col","logo","src","require","alt","react_router_dom","to","backgroundImage","backgroundPosition","backgroundSize","backgroundRepeat","width","height","float","Input","props","Object","assign","TextArea","Button","Messenger","msg","color","LoggerBtn","btnType","Forms_Button","type","apiKey","process","REACT_APP_API_KEY","API","fetchPatient","axios","get","fetchPatients","email","addPatient","data","post","removePatient","delete","updateEHR","patch","getUser","then","register","credentials","login","getConditionNames","search","fetchCondition","getMedNames","fetchMeds","src_Auth","Auth","classCallCheck","this","authenticated","cb","setItem","SignIn","history","useHistory","_useState","useState","_useState2","slicedToArray","setCredentials","_useState3","_useState4","errorMsg","setErrorMsg","onInputChange","e","_e$target","target","name","value","objectSpread","defineProperty","text","Forms_Messenger","onSubmit","preventDefault","reset","status","push","catch","err","setTimeout","Forms_Input","onChange","placeholder","Forms_LoggerBtn","margin","textShadow","SignUp","timeoutMsg","res","statusText","error","errors","PatientList","patient","context","removeState","confirmRemoval","remove","index","patientData","healthData","_id","firstName","nickname","removable","onClick","bind","textDecoration","toggleBtn","pathname","state","patientId","border","backgroundColor","PatientHandler","toggleRemoveState","confirmed","cancel","react","Patients","setContext","patients","setPatients","setRemoveState","_useState5","_useState6","isConfirmed","useEffect","getPatients","asyncToGenerator","regenerator_default","mark","_callee","_yield$API$getUser","_yield$API$fetchPatie","wrap","_context","prev","next","sent","stop","apply","arguments","_callee2","_context2","_x","togglePatientAsRemovable","clone","toConsumableArray","i","key","reduce","acc","cur","useForceUpdate","setValue","createContext","GeneralInfo","editState","toggleState","formSubmit","input","lastName","addressOne","addressTwo","city","window","innerWidth","zip","country","phone","updtBtn","fieldText","fontStyle","fontWeight","padding","borderBottom","transition","HealthCard","bloodType","gender","getAge","DOB","today","Date","birthDate","month","getMonth","age","getFullYear","getDate","dob","defaultValue","insurance","insNumber","rxBin","rxPcn","Forms_TextArea","allergies","immunizations","notes","Conditions","areaTarget","renderSuggestions","toggleDescState","editDescState","getRowHeight","length","renderEditConditions","conditions","sort","b","createdAt","condition","edit","editBtn","littleEditBtn","description","rows","textarea","removeBtn","addBtn","autoComplete","resize","marginTop","focus","Medications","addDoses","otherDosage","doseChoices","littlePointBtn","onBlur","doses","includes","dose","renderDoses","med","medication","dosage","meds","renderMeds","NewContact","cancelBtn","saveBtn","Contacts","newContact","toggleNew","newTarget","formatPhoneNumberLink","number","replace","contact","office","primaryPhone","primaryExt","secondaryPhone","secondaryExt","fax","website","display","href","rel","nextContact","getNewContact","EHR","location","_useContext","useContext","PatientContext","setPatient","generalInfo","setGeneralInfo","healthInfo","setHealthInfo","_useState7","_useState8","setConditions","_useState9","_useState10","setMeds","_useState11","_useState12","contacts","setContacts","_useState13","_useState14","medInput","setMedInput","_useState15","_useState16","setNewContact","_useState17","_useState18","addContact","setAddContact","_useState19","_useState20","editGenState","setGenState","_useState21","_useState22","editHealthState","setHealthState","_useState23","_useState24","editConditState","setConditState","_useState25","_useState26","editMedsState","setMedsState","_useState27","_useState28","conditSuggestions","setConditSuggestions","_useState29","_useState30","medSuggestions","setMedSuggestions","_useState31","_useState32","setDoses","_useState33","_useState34","query","setQuery","forceUpdate","isInitialMount","useRef","current","getPatient","updateDB","newPatient","healthConditions","medications","_yield$API$addPatient","console","log","setNameInNavbar","onConditInputChange","_callee3","items","suggestions","regex","_context3","RegExp","filter","x","test","timeThisOut","clearTimeout","onMedInputChange","_ref5","_callee4","_e$target4","_context4","slice","t0","abrupt","_x2","addCondition","_ref6","_callee5","_text$split","_text$split2","_yield$API$fetchCondi","_yield$API$fetchCondi2","suggest","newCondition","_context5","shortdef","capitalizeWord","now","_x3","word","char","toUpperCase","_ref7","_callee6","_yield$API$getConditi","_context6","_x4","_ref8","_callee7","_yield$API$getMedName","displayTermsList","_context7","term","_x5","selectSuggestedCondit","_ref9","_callee8","_value$split","_value$split2","_yield$API$fetchCondi3","_yield$API$fetchCondi4","_context8","_x6","selectSuggestedMed","_ref10","_callee9","_yield$API$fetchMeds","drugGroup","_doses","_context9","conceptGroup","conceptProperties","_ref11","synonym","_x7","_ref12","_callee10","_yield$API$fetchMeds2","_doses2","_context10","_ref13","_x8","_e$target2","arr","splice","newDescription","suggestion","newMed","_e$target5","hasOwnProperty","_e$target3","list","navBar","navLinks","showNavLinks","useLocation","logout","data-toggle","data-target","Grid_Collapse","isAuthenticated","ProtectedRoute","Component","component","rest","objectWithoutProperties","react_router","render","from","App","Provider","setPatientContext","path","exact","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","registration","onupdatefound","installingWorker","installing","onstatechange","controller","ReactDOM","App_App","document","getElementById","URL","origin","addEventListener","fetch","response","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.95e54434.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Logo.76d8cd68.png\";","module.exports = __webpack_public_path__ + \"static/media/backgroundImage2.f82817c2.jpg\";","import React from 'react'\n\n\nexport const Container = ({ classes, children }) => <div className={classes ? `container ${classes}`: 'container'}>{children}</div>\n\nexport const Row = ({ classes, children }) => <div className={classes ? `row ${classes}`: 'row'}>{children}</div>\n\nexport const Col = ({ size, classes, children }) => ( \n        <div \n            className={size.split(' ').map( size => `col-${size}`).join(' ')+\" \"+ classes || ''}>{children}\n        </div>\n    )\n    \n\nexport const Collapse = ({ navState, children, id }) => { \n    const classes = navState ? 'navbar-collapse collapse show' : 'navbar-collapse collapse';\n\n     return <div className={classes} id={id}>{children}</div>\n}","import React from 'react';\nimport { Link } from \"react-router-dom\";\nimport { Container, Row, Col } from '../../components/Grid';\n\nexport default function Landing() {\n\n   const user = localStorage.getItem('userEmail')\n\n    return (\n        <div\n            style={background}\n        >\n            <Container>\n                <Row>\n                    <Col size={'md-8'} classes={'offset-md-2'}>\n                        <div className=\"jumbotron mt-5\">\n                                 <img\n                                    style={logo}\n                                    src={require(\"../../assets/img/Logo.png\")}\n                                    alt={\"Logo\"}\n                                />\n                            <h1 className=\"display-4\"><em>My</em> EHR</h1>\n                            <p className=\"lead\">All the medical records you need in one, simple place.</p>\n                            <hr className=\"my-4\" />\n                       {(!user || user === '') ?\n                            <Link to=\"/signup\" className=\"btn btn-primary btn-lg\">Get Started</Link> :\n                            <Link to=\"/patients\" className=\"btn btn-primary btn-lg\">Get Started</Link> \n                       }\n                        </div>\n                    </Col>\n                </Row>\n            </Container>\n        </div>\n    )\n}\n\nconst background = {\n    backgroundImage: `url(${require(\"../../assets/img/backgroundImage2.jpg\")}`,\n    backgroundPosition: 'center',\n    backgroundSize: 'cover',\n    backgroundRepeat: 'no-repeat',\n    width: '100vw',\n    height: '100vh'\n},\nlogo = {\n    width: \"60px\",\n    height: \"auto\",\n    float: 'right'\n}","import React from 'react'\n\n\nexport const Input = props => <input className=\"form-control\" {...props} />\n\n  \nexport const TextArea = props =>  <textarea className=\"form-control\" {...props} />\n    \n\nexport const Button = props => <button {...props} >{props.children}</button>\n\n\nexport const Messenger = ({ msg, color }) => <p style={{color: color}}>{msg}</p>\n\n\nexport const LoggerBtn = ({ btnType }) => { \n    return (\n      <Button className={'btn btn-primary btn-lg btn-block'} \n      type=\"submit\">\n        {btnType}\n      </Button>\n    )\n}\n","import axios from \"axios\";\nconst apiKey = process.env.REACT_APP_API_KEY;\n\nexport default {\n    fetchPatient: id => axios.get(`/api/patients/${id}`),\n\n    fetchPatients: email => axios.get(\"/api/patients/load\", email),\n\n    addPatient: data => axios.post(\"/api/patients/add\", data),\n\n    removePatient: id => axios.delete(`/api/patients/${id}`),\n\n    updateEHR: (id, data) => axios.patch(`/api/patients/${id}`, data),\n\n    getUser: () => axios.get('/api/users').then(data => data),\n\n    register: credentials =>  axios.post('api/users/register', credentials),\n  \n    login: credentials => axios.post('/api/users/login', credentials),\n/*\n    External APIs\n*/ \n    getConditionNames: search => axios.get(`https://clinicaltables.nlm.nih.gov/api/conditions/v3/search?terms=${search}&sf=primary_name,consumer_name&df=primary_name,consumer_name,info_link_data`),\n    \n    fetchCondition: search => axios.get(`https://www.dictionaryapi.com/api/v3/references/medical/json/${search}?key=${apiKey}`),\n\n    getMedNames: () => axios.get('https://rxnav.nlm.nih.gov/REST/displaynames'),\n\n    fetchMeds: search => axios.get(`https://rxnav.nlm.nih.gov/REST/drugs.json?name=${search}`)\n}","\nclass Auth {\n\n   constructor() {\n       this.authenticated = false;\n   }\n    login(cb) {\n        this.authenticated = true\n        cb()\n    }\n    logout(cb) {\n        localStorage.setItem('userEmail', '')\n        this.authenticated = false\n        cb()\n    }\n    isAuthenticated() {\n        return this.authenticated;\n    }\n}\n\nexport default new Auth();","import React, { useState } from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport { Container, Row, Col } from '../../components/Grid';\nimport { LoggerBtn, Input, Messenger } from '../../components/Forms';\nimport API from '../../utils/API';\nimport Auth from '../../Auth'\n\nexport default function SignIn() {\n\n    let history = useHistory();\n    const [credentials, setCredentials] = useState({}),\n        [errorMsg, setErrorMsg] = useState(''),\n\n        onInputChange = e => {\n            const { name, value } = e.target;\n            setCredentials({ ...credentials, [name]: value })\n    },\n\n        authorize = () => {\n            Auth.login(() => {\n                history.push(\"/patients\")\n            })\n    },\n\n        timeoutMsg = () => {\n            const clearMsg = () => setErrorMsg('')\n            setTimeout(clearMsg, 3500);\n    },\n\n        handleSubmit = e => {\n            e.preventDefault();\n            e.target.reset();\n\n            API.login(credentials)\n                .then(({ data }) => {\n                    if (data.status === 'success') {\n                        authorize()\n                        localStorage.setItem('userEmail', data.email)\n                    }\n                }).catch( err => {\n                    setErrorMsg('Login failed.  Please try again.')\n                    timeoutMsg()\n                })\n    }\n\n    return (\n        <div\n            style={background}\n        >\n\n        <Container>\n            <Row classes=\"justify-content-center\">\n                <Col size={'md-12'} classes='box-shadow sign' >\n                    <Row>\n                        <div className={'mt-5'}>\n                            <h5 style={text}>\n                                <img \n                                style={logo} \n                                src={require('../../assets/img/Logo.png')} \n                                alt={'Logo'} />\n                                Log-in to your account\n                            </h5>\n                        </div>\n                    </Row> \n\n                    <div className=\"text-center err-msg\">\n                    <Messenger msg={errorMsg} color='#d9534f' />\n                    </div>\n\n                    <Row >\n                        <form onSubmit={handleSubmit} className={'card-body'}>\n                            <div className={'form-group usr-inpt'}>\n                                <label>Email:</label>\n                                <span className=\"fa fa-user\" />\n                                <Input onChange={onInputChange}\n                                    name=\"email\" type=\"email\" placeholder=\"E-mail address\" />\n                            </div>\n                            <div className={'form-group usr-inpt'}>\n                                <label>Password:</label>\n                                <span className=\"fa fa-lock\" />\n                                <Input onChange={onInputChange}\n                                    name=\"password\" type=\"password\" placeholder=\"Password\" />\n                            </div>\n\n                            <LoggerBtn btnType={'log in'} />\n                        </form>\n                    </Row>\n                    <Row classes={'justify-content-center'}>\n                        <p> New here?\n                        <Link to=\"/signup\" > Sign up.</Link>\n                        </p>\n                    </Row>\n                </Col>\n            </Row>\n        </Container>\n\n        </div>\n    )\n}\nconst  background = {\n    backgroundImage: `url(${require(\"../../assets/img/backgroundImage2.jpg\")}`,\n    backgroundPosition: 'center',\n    backgroundSize: 'cover',\n    backgroundRepeat: 'no-repeat',\n    width: '100vw',\n    height: '100vh'\n},\n\nlogo = {\n    width: \"60px\",\n    height: \"auto\",\n    margin: \"15px\"\n},\n\ntext = {\n    color: \"#0099ff\",\n    textShadow: \"1px 1px #000\"\n}\n","import React, { useState } from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { Container, Row, Col } from \"../../components/Grid\";\nimport { LoggerBtn, Input, Messenger } from \"../../components/Forms\";\nimport API from \"../../utils/API\";\nimport Auth from \"../../Auth\";\n\nexport default function SignUp() {\n\n    let history = useHistory();\n    const [credentials, setCredentials] = useState({}),\n        [errorMsg, setErrorMsg] = useState(''),\n\n\n    onInputChange = e => {\n        const { name, value } = e.target;\n        setCredentials({ ...credentials, [name]: value });\n    },\n\n    authorize = () => {\n        Auth.login(() => {\n            history.push(\"/patients\");\n        });\n    },\n\n    timeoutMsg = () => {\n        const clearMsg = () => setErrorMsg('')\n        setTimeout(clearMsg, 3500);\n    },\n\n    handleSubmit = e => {\n        e.preventDefault();\n        e.target.reset();\n\n        try {\n            API.register(credentials)\n                .then( res => {\n                    if (res.statusText === 'OK') {\n                        if (res.data.error){\n                            setErrorMsg(res.data.error)\n                            timeoutMsg()\n                        } else if (res.data.errors) {\n                            setErrorMsg('A valid email and password are required')\n                            timeoutMsg()\n                        } else {\n                        API.login(credentials)\n                            .then(({ data }) => {\n                                if (data.status === 'success') {\n                                    authorize()\n                                }\n                            })\n                        }\n                    }\n                })\n                setCredentials('')\n        } catch (err) { \n            setErrorMsg('Signup failed. Please try again.')\n            timeoutMsg() }\n    }\n    return (\n        <div\n            style={background}\n        >\n        <Container>\n            <Row classes=\"justify-content-center\">\n                <Col size={\"md-12\"} classes={\"box-shadow sign\"}>\n                    <Row >\n                        <div className={\"mt-5\"}>\n                            <h5 style={text}>\n                                <img\n                                    style={logo}\n                                    src={require(\"../../assets/img/Logo.png\")}\n                                    alt={\"Logo\"}\n                                />\n                                Create your account\n                            </h5>\n                        </div>\n                    </Row>\n\n                    <div className=\"text-center err-msg\">\n                    <Messenger msg={errorMsg} color='#d9534f' />\n                    </div>\n\n                    <Row>\n                        <form onSubmit={handleSubmit} className={\"card-body\"}>\n                            <div className={\"form-group usr-inpt\"}>\n                                <label>Email:</label>\n                                <span className=\"fa fa-user\" />\n                                <Input\n                                    onChange={onInputChange}\n                                    name=\"email\"\n                                    type=\"email\"\n                                    placeholder=\"E-mail address\"\n                                />\n                            </div>\n                            <div className={\"form-group usr-inpt\"}>\n                                <label>Password:</label>\n                                <span className=\"fa fa-lock\" />\n                                <Input\n                                    onChange={onInputChange}\n                                    name=\"password\"\n                                    type=\"password\"\n                                    placeholder=\"Password\"\n                                />\n                            </div>\n\n                            <LoggerBtn btnType={\"Sign Up\"} />\n                        </form>\n                    </Row>\n                    <Row classes={\"justify-content-center\"}>\n                        <p>\n                            Already have an account?\n                            <Link to=\"/SignIn\"> Log In.</Link>\n                        </p>\n                    </Row>\n                </Col>\n            </Row>\n        </Container>\n    </div>\n    );\n}\nconst  background = {\n    backgroundImage: `url(${require(\"../../assets/img/backgroundImage2.jpg\")}`,\n    backgroundPosition: 'center',\n    backgroundSize: 'cover',\n    backgroundRepeat: 'no-repeat',\n    width: '100vw',\n    height: '100vh'\n},\n\nlogo = {\n    width: \"60px\",\n    height: \"auto\",\n    margin: '15px'\n},\n\ntext = {\n    color: \"#0099ff\",\n    textShadow: \"1px 1px #000\"\n}","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Col, Row } from '../Grid';\n\nexport function PatientList({ patient, context, removeState, confirmRemoval, remove, index }) {\n\tconst { patientData, healthData, _id } = patient;\n\n\t//keeping invalid or corrupt data away from the EHR page.\n\tif (!patientData || !healthData) {\n\t\treturn <div />;\n\t}\n\tconst { firstName, nickname } = patientData;\n\n\tlet name;\n\tif (firstName || nickname) {\n\t\tname = nickname && nickname !== '' ? nickname : firstName;\n\t} else {\n\t\tname = '';\n\t}\n\n\tif (removeState) {\n\t\tif (patient.removable) {\n\t\t\treturn (\n\t\t\t\t<div className={'patient-remove'}>\n\t\t\t\t\t<Link to=\"/patients\" onClick={remove.bind(null, _id)} style={{ textDecoration: 'none' }}>\n\t\t\t\t\t\t<div className=\"card box-shadow mt-5\">\n\t\t\t\t\t\t\t<div className=\"card-body text-center btn btn-outline-danger\">\n\t\t\t\t\t\t\t\t<Row>\n\t\t\t\t\t\t\t\t\t<Col size={'md-4'}>\n\t\t\t\t\t\t\t\t\t\t<i className=\"fas fa-user-times fa-4x rm-lg-user\" />\n\t\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t\t<Col size={'md-8'}>\n\t\t\t\t\t\t\t\t\t\t<h2 className=\"card-title\">Please Confirm</h2>\n\t\t\t\t\t\t\t\t\t\t<p className=\"card-text\">\n\t\t\t\t\t\t\t\t\t\t\tThis will remove {name !== '' ? name : 'this patient'} from your list.\n\t\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</Link>\n\t\t\t\t</div>\n\t\t\t);\n\t\t} else {\n\t\t\treturn (\n\t\t\t\t<div className={'patient-remove'}>\n\t\t\t\t\t<Link to=\"/patients\" onClick={confirmRemoval.bind(null, index)} style={{ textDecoration: 'none' }}>\n\t\t\t\t\t\t<div className=\"card box-shadow mt-5\">\n\t\t\t\t\t\t\t<div className=\"card-body text-center\">\n\t\t\t\t\t\t\t\t<Row>\n\t\t\t\t\t\t\t\t\t<Col size={'md-2'} />\n\t\t\t\t\t\t\t\t\t<Col size={'md-8'}>\n\t\t\t\t\t\t\t\t\t\t<h2 className=\"card-title\">Remove {name === '' ? 'this patient' : name}</h2>\n\t\t\t\t\t\t\t\t\t\t<p className=\"card-text\">\n\t\t\t\t\t\t\t\t\t\t\tDelete {name !== '' ? name : 'this patient'} from your patient list?\n\t\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t\t<Col size={'md-2'}>\n\t\t\t\t\t\t\t\t\t\t<i className=\"fas fa-user-times fa-2x rm-sm-user\" style={toggleBtn} />\n\t\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</Link>\n\t\t\t\t</div>\n\t\t\t);\n\t\t}\n\t}\n\treturn (\n\t\t<Link\n\t\t\tto={{\n\t\t\t\tpathname: '/ehr',\n\t\t\t\tstate: { patientId: _id, name }\n\t\t\t}}\n\t\t\tonClick={() => {\n\t\t\t\tcontext({ patientId: _id, name });\n\t\t\t}} //set patientContext as universal variable.\n\t\t\tstyle={{ textDecoration: 'none' }}\n\t\t>\n\t\t\t<div className=\"card box-shadow mt-5\">\n\t\t\t\t<div className=\"card-body text-center\">\n\t\t\t\t\t<h2 className=\"card-title\">{name === '' ? 'name this patient' : name}</h2>\n\t\t\t\t\t<p className=\"card-text\">Access {name !== '' ? name : 'this patient'}'s information here.</p>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</Link>\n\t);\n}\n\nconst toggleBtn = {\n\tfloat: 'right',\n\tborder: 'none',\n\tmargin: '0',\n\tcolor: 'white',\n\tbackgroundColor: 'white'\n};\n","import React, { Fragment } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Button } from '../../components/Forms';\n\nexport function PatientHandler({ removeState, toggleRemoveState, confirmed, cancel }) {\n  \n\tif (removeState) {\n\t\tif (confirmed) {\n\t\t\treturn (\n\t\t\t\t<div className={'remove'}>\n\t\t\t\t\t<Button\n\t\t\t\t\t\tclassName=\"btn minus\"\n\t\t\t\t\t\tstyle={removeState ? { float: 'left', color: 'tomato' } : { float: 'left' }}\n\t\t\t\t\t\tonClick={cancel}\n\t\t\t\t\t>\n\t\t\t\t\t\t<i className=\"fas fa-hand-point-right\" /> last chance to cancel\n\t\t\t\t\t</Button>\n\t\t\t\t</div>\n\t\t\t);\n\t\t} else {\n\t\t\treturn (\n\t\t\t\t<div className={'remove'}>\n\t\t\t\t\t<Button\n\t\t\t\t\t\tclassName=\"btn minus\"\n\t\t\t\t\t\tstyle={removeState ? { float: 'left', color: 'tomato' } : { float: 'left' }}\n\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\ttoggleRemoveState(!removeState);\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\t<i className=\"fas fa-ban\" /> Cancel\n\t\t\t\t\t</Button>\n\t\t\t\t</div>\n\t\t\t);\n\t\t}\n\t} else {\n\t\treturn (\n\t\t\t<Fragment>\n\t\t\t\t<div className={'add'}>\n\t\t\t\t\t<Link\n\t\t\t\t\t\tto={{\n\t\t\t\t\t\t\tpathname: '/ehr',\n\t\t\t\t\t\t\tstate: { patientId: '' }\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tclassName=\"btn plus\"\n\t\t\t\t\t\tstyle={{ float: 'right' }}\n\t\t\t\t\t>\n\t\t\t\t\t\t<i className=\"fas fa-user-plus\" /> New Patient\n\t\t\t\t\t</Link>\n\t\t\t\t</div>\n\t\t\t\t<div className={'remove'}>\n\t\t\t\t\t<Button\n\t\t\t\t\t\tclassName=\"btn minus\"\n\t\t\t\t\t\tstyle={{ float: 'left' }}\n\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\ttoggleRemoveState(!removeState);\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\t<i className=\"fas fa-user-minus\" /> Remove Patients\n\t\t\t\t\t</Button>\n\t\t\t\t</div>\n\t\t\t</Fragment>\n\t\t);\n\t}\n}\n","import React, { useState, useEffect } from 'react';\nimport { Container, Row, Col } from '../../components/Grid';\nimport { PatientList } from '../../components/PatientList'; \nimport { PatientHandler }  from '../../components/PatientHandler'; \nimport API from \"../../utils/API\";\n\n\nexport default function Patients({ setContext }) {\n\n    const [ patients, setPatients ] = useState([]),\n      [ removeState, setRemoveState ] = useState(false),\n      [ confirmed, isConfirmed ] = useState(false);\n\n    useEffect(() => {\n        getPatients()\n    }, [])\n\n    const getPatients = async () => {\n\n        const { data: user } = await API.getUser(),\n          { data } = await API.fetchPatients(user);\n\n        setPatients(data);\n    },\n\n    removePatient = async _id => {\n\n       await API.removePatient(_id)\n       setRemoveState(false)\n       getPatients();\n    },\n\n    togglePatientAsRemovable = index => {\n        const clone = [...patients];\n        \n        clone[index].removable = !clone[index].removable\n        \n        isConfirmed(true)\n        setPatients(clone)\n    },\n\n    cancelPatientRemoval = () => {        \n        const clone = patients.reduce((acc, cur) => {\n            cur.removable = false\n            acc.push(cur)\n            return acc\n        }, [])\n        isConfirmed(false)\n        setRemoveState(false)\n        setPatients(clone)\n    }\n\n\n    return (\n        <Container>\n            <Row>\n                <Col size={'md-8'} classes={'offset-md-2'}>\n                    {\n                        patients.map( (patient, i) => \n                            <PatientList \n                            patient={patient} \n                            index={i} \n                            context={setContext}  \n                            removeState={removeState}\n                            confirmRemoval={togglePatientAsRemovable}\n                            remove={removePatient}\n                            key={patient._id} \n                            />)\n                    }\n                    <PatientHandler \n                        removeState={removeState}\n                        confirmed={confirmed}\n                        cancel={cancelPatientRemoval}\n                        toggleRemoveState={() => {setRemoveState(!removeState)}} \n                        />\n                </Col>\n           </Row>\n        </Container>\n    )\n}\n","import { useState, useEffect, useRef } from 'react';\n\n\n//used track previous states for comparison purposes. ex use:  previousItem = usePrevious(itemInput.property),\n export const usePrevious = value => {\n\n        const ref = useRef();\n\n        useEffect(() => {\n        ref.current = value;\n        }, [value]);\n\n    return ref.current;\n}\n\n//force the re-rendering of state.\nexport const useForceUpdate = () => {\n    const [value, setValue] = useState(0); \n    return () => setValue(value => ++value); // update the state to force render\n}","import { createContext } from 'react';\n\nexport default createContext({\n    patientId: '',\n    name: ''\n})\n","import React from 'react'\nimport { Col } from '../Grid';\nimport { Input, Button } from '../Forms';\n\n\nexport function GeneralInfo({ data, target, editState, toggleState, formSubmit, name }) {\n\nif (editState) {\n    return (\n        <div className={'my-5'}>\n        <em><h5 style={{textDecoration: \"underline\"}}>\n            {name ? `${name}'s` : ''} Contact Information:</h5></em>\n        \n          <Col size={'md-12'} classes={\"mt-5\"}>\n                <Button className=\"fas fa-backspace fa-2x\" \n                style={{ ...toggleBtn, color: \"#d9534f\" }} \n                onClick={toggleState} />\n            </Col>\n            <form onSubmit={formSubmit} >\n                <div className={\"form-row\"}>\n                    <Col size={'md-4'} classes={'form-group'}>\n                        <label>First Name</label>\n                        <Input value={data ? data.firstName : ''} name=\"firstName\"\n                        style={input}\n                        onChange={target} \n                        />\n                    </Col>\n                    <Col size={'md-4'} classes={'form-group'}>\n                        <label>Last Name</label>\n                        <Input value={data ? data.lastName : ''} name=\"lastName\"\n                        style={input}\n                        onChange={target} \n                        />\n                    </Col>\n                    <Col size={'md-4'} classes={'form-group'}>\n                        <label>Nickname</label>\n                        <Input value={data ? data.nickname : ''} name=\"nickname\"\n                        style={input}\n                        placeholder={\"e.g. 'Mom'\"} \n                        onChange={target} \n                        />\n                    </Col>\n                </div>\n                <div className=\"form-row\">\n                    <Col size={'md-6'} classes={'form-group'}>\n                        <label>Address Line 1</label>\n                        <Input value={data ? data.addressOne : ''} name=\"addressOne\"\n                        style={input}\n                        onChange={target} \n                        />                    </Col>\n                    <Col size={'md-6'} classes={'form-group'}>\n                        <label>Address Line 2</label>\n                        <Input value={data ? data.addressTwo : ''} name=\"addressTwo\"\n                        style={input}\n                        onChange={target} \n                        />                    \n                    </Col>\n                </div>\n                <div className=\"form-row\">\n                    <Col size={'md-3'} classes={'form-group'}>\n                        <label>City</label>\n                        <Input value={data ? data.city : ''} name=\"city\"\n                        style={input}\n                        onChange={target} \n                        />\n                    </Col>\n                    <Col size={'md-3'} classes={'form-group'}>\n                        <label>{window.innerWidth > 992 ? 'State/Providence:' : 'State:'}</label>\n                        <Input value={data ? data.state : ''} name=\"state\"\n                        style={input}\n                        onChange={target} \n                        />\n                    </Col>\n                    <Col size={'md-3'} classes={'form-group'}>\n                        <label>Zip/Postal Code</label>\n                        <Input value={data ? data.zip : ''} name=\"zip\"\n                        style={input}\n                        onChange={target} \n                        />\n                    </Col>\n                    <Col size={'md-3'} classes={'form-group'}>\n                        <label>Country</label>\n                        <Input value={data ? data.country : ''} name=\"country\"\n                        style={input}\n                        onChange={target} \n                        />\n                    </Col>\n                </div>\n                    <div className=\"form-row\">\n                    <Col size={'md-4'} classes={'form-group'}>\n                        <label>Phone Number</label>\n                        <Input value={data ? data.phone : ''} name=\"phone\"\n                        style={input}\n                        onChange={target} \n                        />\n                    </Col>\n                    <Col size={'md-4'} classes={'form-group'}>\n                        <label>Email</label>\n                        <Input value={data ? data.email : ''} name=\"email\"\n                        style={input}\n                        onChange={target} \n                        />\n                    </Col>\n                    </div>\n                <Col size={'md-12'}>\n                <Button className=\"btn\" style={updtBtn} \n                    type=\"submit\" > <i className=\"fas fa-sync-alt mr-2\"/> {' '}  \n                        {' '} update \n                    </Button>\n                </Col>\n            </form>\n        </div>\n    )\n    } else {\n        return (\n            <div className={'my-5 gen-info'}>\n                <em><h5 style={{textDecoration: \"underline\"}}>\n                {name ? `${name}'s` : ''} Contact Information:</h5></em>\n\n                <Col size={'md-12'} classes={'mt-5'}>\n                    <Button className=\"fas fa-user-edit fa-2x\" style={toggleBtn} \n                        onClick={toggleState} \n                    />   \n                </Col>\n            <form>\n                <div className={\"form-row\"}>\n                    <Col size={'md-4'} classes={'form-group'}>\n                        <label>First Name:</label>\n                        <div style={fieldText}>{data.firstName}</div>\n                    </Col>\n                    <Col size={'md-4'} classes={'form-group'}>\n                        <label>Last Name:</label>\n                        <div style={fieldText}>{data.lastName}</div>\n                    </Col>\n                    <Col size={'md-4'} classes={'form-group'}>\n                        <label>Nickname:</label>\n                        <div style={fieldText}>{data.nickname}</div>\n                    </Col>\n                </div>\n                <div className=\"form-row\">\n                    <Col size={'md-6'} classes={'form-group'}>\n                        <label>Address line 1:</label>\n                        <div style={fieldText}>{data.addressOne}</div>\n                    </Col>\n                    <Col size={'md-6'} classes={'form-group'}>\n                        <label>Address line 2:</label>\n                        <div style={fieldText}>{data.addressTwo}</div>\n                    </Col>\n                </div>\n                <div className=\"form-row\">\n                    <Col size={'md-3'} classes={'form-group'}>\n                        <label>City:</label>\n                        <div style={fieldText}>{data.city}</div>\n                    </Col>\n                    <Col size={'md-3'} classes={'form-group'}>\n                        <label>{window.innerWidth > 992 ? 'State/Providence:' : 'State:'}</label>\n                        <div style={fieldText}>{data.state}</div>\n                    </Col>\n                    <Col size={'md-3'} classes={'form-group'}>\n                        <label>Zip/Postal Code:</label>\n                        <div style={fieldText}>{data.zip}</div>\n                    </Col>\n                    <Col size={'md-3'} classes={'form-group'}>\n                        <label>Country:</label>\n                        <div style={fieldText}>{data.country}</div>\n                    </Col>\n                </div>\n                <div className=\"form-row\">\n                    <Col size={'md-4'} classes={'form-group'}>\n                        <label>Phone Number:</label>\n                        <div style={fieldText}>{data.phone}</div>\n                    </Col>\n                    <Col size={'md-4'} classes={'form-group'}>\n                        <label>Email:</label>\n                        <div style={fieldText}>{data.email}</div>\n                    </Col>\n                </div>\n            </form>\n         </div>\n        )\n    }\n}\n\nconst fieldText = {\n    fontStyle: 'italic',\n    fontWeight: '1000',\n    padding: '10px 10px 10px 0',\n    color: 'black'\n},\ntoggleBtn = {\n    float: 'right',\n    border: 'none',\n    margin: '0',\n    color: 'white',\n    backgroundColor: 'white'\n},\nupdtBtn = {\n    float: 'right',\n    margin: '0',\n    backgroundColor: '#214c91',\n    color: 'white',\n    padding: \".4rem .75rem\"\n},\ninput = {\n    borderBottom: '1px solid rgba(0, 0, 0, .2)',\n    transition: 'all 0.30s ease-in-out'\n}","import React from 'react'\nimport { Col } from '../Grid';\nimport { Input, Button, TextArea } from '../Forms';\n\n\nexport function HealthCard({ data, target, editState, toggleState, formSubmit, name }) {\n\n    const getAge = DOB => {\n\n        const today = new Date(),\n         birthDate = new Date(DOB),\n          month = today.getMonth() - birthDate.getMonth();\n        let age = today.getFullYear() - birthDate.getFullYear();\n\n          if(age !== age) return '??'\n            \n    return month < 0 || (month === 0 && today.getDate() < birthDate.getDate()) ? age - 1 : age;\n    },\n\n     getBloodTypes = bloodType => {\n    \n        const types = ['Select', 'Unknown', 'A-Positive', 'A-Negative', 'B-Positive', 'B-Negative', 'AB-Positive', 'AB-Negative', 'O-Positive', 'O-Negative']\n    \n    return types.map( (type, i) => type === bloodType ? <option key={i} value={bloodType} defaultValue>{bloodType}</option> : <option key={i}>{type}</option>)\n     },\n\n     getGenders = gender => {\n    \n        const types = ['Select', 'Male', 'Female', 'Transgender Male', 'Transgender Female']\n    \n    return types.map( (type, i) => type === gender ? <option key={i} value={gender} defaultValue>{gender}</option> : <option key={i}>{type}</option>)\n     }; \n    \nif (editState) {\n    return (\n        <div className={'my-5'}>\n            <em><h5 style={{textDecoration: \"underline\"}}>\n            {name ? `${name}'s` : ''} Basic Health Information:</h5></em>\n\n          <Col size={'md-12'} classes={\"mt-5\"}>\n                <Button className=\"fas fa-backspace fa-2x\" style={{...toggleBtn, color: \"#d9534f\"}} \n                onClick={toggleState} />\n            </Col>\n            <form onSubmit={formSubmit} >\n                <div className={\"form-row\"}>\n                    <Col size={'md-3'} classes={'form-group'}>\n                        <label>Date of Birth</label>\n                        <Input name=\"dob\" placeholder=\"MM/DD/YYYY\"\n                        value={data.dob}\n                        style={input}\n                        onChange={target} \n                        />\n                    </Col>\n                    <Col size={'md-2'} classes={'form-group'}>\n                        <label>Age</label>\n                        <div style={fieldText}>\n                            {getAge(data.dob)}\n                        </div>\n                    </Col>\n                    <Col size={'md-3'} classes={'form-group'}>\n                    <label>Gender</label>\n                        <select name=\"gender\" className=\"form-control\"\n                        style={input}\n                        onChange={target} >\n                            {getGenders(data.gender)}    \n                        </select>\n                    </Col>\n                    <Col size={'md-4'} classes={'form-group'}>\n                        <label>Blood Type</label>\n                        <select name=\"bloodType\" className=\"form-control\"\n                        style={input} \n                        onChange={target} >\n                            {getBloodTypes(data.bloodType)}\n                        </select>\n                    </Col>\n                </div>\n                <div className=\"form-row\">\n                    <Col size={'md-4'} classes={'form-group'}>\n                        <label>Insurance Plan</label>\n                        <Input value={data.insurance} name=\"insurance\"\n                        style={input}\n                        onChange={target} \n                        />                    \n                    </Col>\n                    <Col size={'md-4'} classes={'form-group'}>\n                        <label>Number</label>\n                        <Input value={data.insNumber} name=\"insNumber\"\n                        style={input}\n                        onChange={target} \n                        />                    \n                    </Col>\n                    <Col size={'md-2'} classes={'form-group'}>\n                        <label>Rx BIN</label>\n                        <Input value={data.rxBin} name=\"rxBin\"\n                        style={input}\n                        onChange={target} \n                        />                    \n                    </Col>\n                    <Col size={'md-2'} classes={'form-group'}>\n                        <label>Rx PCN</label>\n                        <Input value={data.rxPcn} name=\"rxPcn\"\n                        style={input}\n                        onChange={target} \n                        />\n                    </Col>\n                </div>\n                <div className=\"form-row\">\n                    <Col size={'md-6'} classes={'form-group'}>\n                        <label>Allergies</label>\n                        <TextArea value={data.allergies} name=\"allergies\"\n                        style={input}\n                        onChange={target} \n                        />\n                    </Col>\n                    <Col size={'md-6'} classes={'form-group'}>\n                        <label>Immunizations (include dates received)</label>\n                        <TextArea value={data.immunizations} name=\"immunizations\"\n                        style={input}\n                        onChange={target} \n                        />\n                    </Col>\n                </div>\n                <div className=\"form-row\">\n                    <Col size={'md-6'} classes={'form-group'}>\n                        <label>Family History & Other Notes</label>\n                        <TextArea value={data.notes} name=\"notes\"\n                        style={input}\n                        onChange={target} \n                        />\n                    </Col>\n                </div>\n                <Col size={'md-12'}>\n                <Button className=\"btn\" style={updtBtn} \n                    type=\"submit\" > <i className=\"fas fa-sync-alt mr-2\"/> {' '}  \n                        {' '} update \n                    </Button>\n                </Col>\n            </form>\n        </div>\n        )\n    } else {\n        return (\n            <div className={'my-5 health-info'}>\n                <em><h5 style={{textDecoration: \"underline\"}}>\n                {name ? `${name}'s` : ''} Basic Health Information:</h5></em>\n\n                <Col size={'md-12'} classes={'gen-edit mt-5'}>\n                    <Button className=\"fas fa-user-edit fa-2x\" style={toggleBtn} \n                        onClick={toggleState} \n                    />   \n                </Col>\n            <form>\n                <div className={\"form-row\"}>\n                    <Col size={'md-3'} classes={'form-group'}>\n                        <label>Date of Birth:</label>\n                        <div style={fieldText}>{data.dob}</div>\n                    </Col>\n                    <Col size={'md-2'} classes={'form-group'}>\n                        <label>Age:</label>\n                        <div style={fieldText}>\n                            {getAge(data.dob)}\n                        </div>\n                    </Col>\n                    <Col size={'md-3'} classes={'form-group'}>\n                        <label>Gender:</label>\n                        <div style={fieldText}>{data.gender}</div>\n                    </Col>\n                    <Col size={'md-4'} classes={'form-group'}>\n                        <label>Blood Type:</label>\n                        <div style={fieldText}>{data.bloodType}</div>\n                    </Col>\n                </div>\n                <div className=\"form-row\">\n                    <Col size={'md-4'} classes={'form-group'}>\n                        <label>Insurance Plan:</label>\n                        <div style={fieldText}>{data.insurance}</div>\n                    </Col>\n                    <Col size={'md-4'} classes={'form-group'}>\n                        <label>Number:</label>\n                        <div style={fieldText}>{data.insNumber}</div>\n                    </Col>\n        \n                    <Col size={'md-2'} classes={'form-group'}>\n                        <label>Rx BIN:</label>\n                        <div style={fieldText}>{data.rxBin}</div>\n                    </Col>\n                    <Col size={'md-2'} classes={'form-group'}>\n                        <label>Rx PCN:</label>\n                        <div style={fieldText}>{data.rxPcn}</div>\n                    </Col>\n                </div>\n                <div className=\"form-row\">\n                    <Col size={'md-6'} classes={'form-group'}>\n                        <label>Allergies:</label>\n                        <div style={fieldText}>{data.allergies}</div>\n                    </Col>\n                    <Col size={'md-6'} classes={'form-group'}>\n                        <label>Immunizations (include dates received):</label>\n                        <div style={fieldText}>{data.immunizations}</div>\n                    </Col>\n                </div>\n                <div className=\"form-row\">\n                    <Col size={'md-6'} classes={'form-group'}>\n                        <label>Family History & Other Notes:</label>\n                        <div style={fieldText}>{data.notes}</div>\n                    </Col>\n                </div>\n            </form>\n         </div>\n        )\n    }\n}\n\nconst fieldText = {\n    fontStyle: 'italic',\n    fontWeight: '1000',\n    padding: '10px 10px 10px 0',\n    color: 'black'\n},\ntoggleBtn = {\n    float: 'right',\n    border: 'none',\n    margin: '0',\n    color: 'white',\n    backgroundColor: 'white'\n},\nupdtBtn = {\n    float: 'right',\n    margin: '0',\n    backgroundColor: '#214c91',\n    color: 'white',\n    padding: \".4rem .75rem\"\n},\ninput = {\n    borderBottom: '1px solid rgba(0, 0, 0, .2)',\n    transition: 'all 0.30s ease-in-out'\n}","import React from 'react';\nimport { Col } from '../Grid';\nimport { Input, Button, TextArea } from '../Forms';\n\nexport function Conditions({\n\tdata,\n\tname,\n\ttarget,\n\tareaTarget,\n\teditState,\n\ttoggleState,\n\tformSubmit,\n\trenderSuggestions,\n\tremove,\n\ttext,\n\ttoggleDescState,\n\teditDescState\n}) {\n\t\n\tconst getRowHeight = (text) => (text.length > 250 ? text.length / 80 : 3),\n\n\t\trenderConditions = conditions => {\n\t\t\treturn conditions.sort((a, b) => b.createdAt - a.createdAt).map((condition, i) => \n\t\t\t\t(\n\t\t\t\t<Col key={i} size={'md-12'} classes={'form-group'}>\n\t\t\t\t\t<label style={fieldText}>{condition.name} </label>\n\t\t\t\t\t<div>{condition.description}</div>\n\t\t\t\t</Col>\n\t\t\t));\n\t\t};\n\n\tfunction renderEditConditions(conditions) {\n\t\treturn conditions.sort((a, b) => b.createdAt - a.createdAt).map((condition, i) => {\n\t\t\t\n\t\t\tif (condition.edit) {\n\t\t\t\treturn (\n\t\t\t\t\t<Col key={i} size={'md-12'} classes={'form-group'}>\n\t\t\t\t\t\t<form>\n\t\t\t\t\t\t\t<label style={fieldText}>\n\t\t\t\t\t\t\t\t{condition.name} {' '}\n\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\tclassName=\"fas fa-pen\"\n\t\t\t\t\t\t\t\t\tstyle={editBtn}\n\t\t\t\t\t\t\t\t\tonClick={toggleDescState.bind(null, i)}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\tclassName=\"fas fa-sync-alt\"\n\t\t\t\t\t\t\t\t\tstyle={littleEditBtn}\n\t\t\t\t\t\t\t\t\tonClick={toggleDescState.bind(null, i)}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</label>\n\n\t\t\t\t\t\t\t<TextArea\n\t\t\t\t\t\t\t\tvalue={condition.description}\n\t\t\t\t\t\t\t\trows={getRowHeight(condition.description)}\n\t\t\t\t\t\t\t\tonChange={areaTarget(i)}\n\t\t\t\t\t\t\t\tstyle={textarea}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</form>\n\t\t\t\t\t</Col>\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\treturn (\n\t\t\t\t\t<Col key={i} size={'md-12'} classes={'form-group'}>\n\t\t\t\t\t\t<label style={fieldText}>\n\t\t\t\t\t\t\t{condition.name} {' '}\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\tclassName=\"fas fa-pen\"\n\t\t\t\t\t\t\t\tstyle={editBtn}\n\t\t\t\t\t\t\t\tonClick={toggleDescState.bind(null, i)}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<Button className=\"fas fa-times\" style={removeBtn} onClick={remove.bind(null, i)} />\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<div>{condition.description}</div>\n\t\t\t\t\t</Col>\n\t\t\t\t);\n\t\t\t}\n\t\t});\n\t}\n\n\tif ((editState || data.length === 0) && !editDescState) {\n\t\treturn (\n\t\t\t<div className={'my-5'}>\n\t\t\t\t<em>\n\t\t\t\t\t<h5 style={{ textDecoration: 'underline' }}>\n\t\t\t\t\t{name ? `${name}'s` : ''} Health Conditions:</h5>\n\t\t\t\t</em>\n\n\t\t\t\t<Col size={'md-12'} classes=\"mt-5\">\n\t\t\t\t\t<Button\n\t\t\t\t\t\tclassName=\"fas fa-backspace fa-2x\"\n\t\t\t\t\t\tstyle={{ ...toggleBtn, color: '#d9534f' }}\n\t\t\t\t\t\tonClick={toggleState}\n\t\t\t\t\t/>\n\t\t\t\t</Col>\n\t\t\t\t<form onSubmit={formSubmit}>\n\t\t\t\t\t<div className=\"form-row\" style={{ background: 'white' }}>\n\t\t\t\t\t\t<Col size={'md-6'} classes={'form-group'}>\n\t\t\t\t\t\t\t<label>Add New Condition</label>\n\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t<Input type=\"text\"  autoComplete=\"off\"\n\t\t\t\t\t\t\t\tstyle={input} \n\t\t\t\t\t\t\t\tvalue={text} \n\t\t\t\t\t\t\t\tonChange={target} \n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t{renderSuggestions()}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t<Col size={'md-3'}>\n\t\t\t\t\t\t\t<Button className=\"btn\" style={addBtn} type=\"submit\">\n\t\t\t\t\t\t\t\t{' '}\n\t\t\t\t\t\t\t\t<i className=\"fa fa-plus fa-2x mr-2\" /> Add\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className={'form-row'}>{renderEditConditions(data)}</div>\n\t\t\t\t</form>\n\t\t\t</div>\n\t\t);\n\t} else if (editDescState) {\n\t\treturn (\n\t\t\t<div className={'my-5'}>\n\t\t\t\t<em>\n\t\t\t\t\t<h5 style={{ textDecoration: 'underline' }}>\n\t\t\t\t\t{name ? `${name}'s` : ''} Health Conditions:</h5>\n\t\t\t\t</em>\n\n\t\t\t\t<Col size={'md-12 mt-5'}>\n\t\t\t\t\t<Button\n\t\t\t\t\t\tclassName=\"fas fa-backspace fa-2x\"\n\t\t\t\t\t\tstyle={{ ...toggleBtn, color: '#d9534f' }}\n\t\t\t\t\t\tonClick={toggleState}\n\t\t\t\t\t/>\n\t\t\t\t</Col>\n\t\t\t\t<form onSubmit={formSubmit}>\n\t\t\t\t\t<div className=\"form-row\" style={{ background: 'white' }}>\n\t\t\t\t\t\t<Col size={'md-6'} classes={'form-group'}>\n\t\t\t\t\t\t\t<label>Add New Condition</label>\n\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t<Input type=\"text\" \n\t\t\t\t\t\t\t\tstyle={input} \n\t\t\t\t\t\t\t\tvalue={text} \n\t\t\t\t\t\t\t\tonChange={target} \n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t{renderSuggestions()}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t<Col size={'md-3'}>\n\t\t\t\t\t\t\t<Button className=\"btn\" style={addBtn} type=\"submit\">\n\t\t\t\t\t\t\t\t{' '}\n\t\t\t\t\t\t\t\t<i className=\"fa fa-plus fa-2x mr-2\" /> Add\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className={'form-row'}>{renderEditConditions(data)}</div>\n\t\t\t\t</form>\n\t\t\t</div>\n\t\t);\n\t} else {\n\t\treturn (\n\t\t\t<div className={'mt-5 condition-info'}>\n\t\t\t\t<em>\n\t\t\t\t\t<h5 style={{ textDecoration: 'underline' }}>\n\t\t\t\t\t{name ? `${name}'s` : ''} Health Conditions:</h5>\n\t\t\t\t</em>\n\n\t\t\t\t<Col size={'md-12'} classes={'condition-edit mt-5'}>\n\t\t\t\t\t<Button className=\"fas fa-user-edit fa-2x\" style={{...toggleBtn, color: \"white\"}} \n\t\t\t\t\tonClick={toggleState}\n\t\t\t\t\t/>\n\t\t\t\t</Col>\n\t\t\t\t<form>\n\t\t\t\t\t<div className={'form-row'}>{renderConditions(data)}</div>\n\t\t\t\t</form>\n\t\t\t</div>\n\t\t);\n\t}\n}\nconst fieldText = {\n\t\tfontStyle: 'italic',\n\t\tfontWeight: '1000',\n\t\tpadding: '10px 10px 10px 0',\n\t\tcolor: 'black'\n\t},\n\ttextarea = {\n\t\tresize: 'none',\n\t\tborderBottom: '1px solid rgba(0, 0, 0, .2)',\n\t\ttransition: 'all 0.30s ease-in-out'\n\t},\n\tinput = {\n\t\tborderBottom: '1px solid rgba(0, 0, 0, .2)',\n\t\ttransition: 'all 0.30s ease-in-out'\n\t},\n\ttoggleBtn = {\n\t\tfloat: 'right',\n\t\tborder: 'none',\n\t\tmargin: '0',\n\t\tbackgroundColor: 'white'\n\t},\n\taddBtn = {\n\t\tmarginTop: '30px',\n\t\tcolor: '#214c91',\n\t\tfocus: 'none',\n\t\tsize: '10em'\n\t},\n\teditBtn = { \n\t\tborder: 'none', \n\t\tbackgroundColor: 'white' \n\t},\n\tlittleEditBtn = {\n\t\tbackgroundColor: 'white',\n\t\tborder: 'none',\n\t\tcolor: '#214c91'\n\t},\n\tremoveBtn = {\n\t\tbackgroundColor: 'white',\n\t\tborder: 'none',\n\t\tcolor: 'red'\n\t};\n","import React from 'react';\nimport { Col } from '../Grid';\nimport { Input, Button } from '../Forms';\n\nexport function Medications({\n\tdata,\n\ttext,\n\tname,\n\ttarget,\n\tremove,\n\taddDoses,\n\teditState,\n\tformSubmit,\n\ttoggleState,\n\totherDosage,\n\tdoseChoices,\n\trenderSuggestions\n}) {\n\tconst renderDoses = (doses) => {\n\t\t\tif (!doses || otherDosage === 'Other Dose') {\n\t\t\t\treturn <Input name=\"dosage\" placeholder=\"Enter Dosage\" style={input} onChange={target} />;\n\t\t\t} else {\n\t\t\t\tconst clone = doses.includes('Other Dose') ? [ ...doses ] : doses.concat('Other Dose');\n\t\t\t\treturn (\n\t\t\t\t\t<select name=\"dosage\" style={input} onChange={target} className=\"form-control\">\n\t\t\t\t\t\t<option defaultValue>Which Dose?</option>\n\n\t\t\t\t\t\t{clone.map((dose, i) => <option key={i}>{dose}</option>)}\n\t\t\t\t\t</select>\n\t\t\t\t);\n\t\t\t}\n        },\n        \n\t\trenderMeds = meds => {\n\t\t\treturn meds.sort((a, b) => b.createdAt - a.createdAt).map((med, i) => (\n\t\t\t\t<Col key={i} size={'md-12'} classes={'form-group'}>\n\t\t\t\t\t<label style={fieldText}>{med.medication} </label>\n\t\t\t\t\t<div>{med.dosage}</div>\n\t\t\t\t</Col>\n\t\t\t));\n\t\t},\n\n\t    renderEditMeds = meds => {\n            return meds.sort((a, b) => b.createdAt - a.createdAt).map((med, i) => (\n                <Col key={i} size={'md-12'} classes={'form-group'}>\n                    <label style={fieldText}>\n                        {med.medication}{' '}\n                        <Button className=\"fas fa-times\" type=\"submit\" style={removeBtn} onClick={remove.bind(null, i)} />\n                    </label>\n                    <div>{med.dosage}</div>\n                </Col>\n            ));\n\t    }\n\n\tif (editState || data.length === 0) {\n\t\treturn (\n\t\t\t<div className={'my-5'}>\n\t\t\t\t<em>\n\t\t\t\t\t<h5 style={{ textDecoration: 'underline' }}>{name ? `${name}'s` : ''} Medications:</h5>\n\t\t\t\t</em>\n\n\t\t\t\t<Col size={'md-12'} classes=\"mt-5\">\n\t\t\t\t\t<Button\n\t\t\t\t\t\tclassName=\"fas fa-backspace fa-2x\"\n\t\t\t\t\t\tstyle={{ ...toggleBtn, color: '#d9534f' }}\n\t\t\t\t\t\tonClick={toggleState}\n\t\t\t\t\t/>\n\t\t\t\t</Col>\n\t\t\t\t<form onSubmit={formSubmit}>\n\t\t\t\t\t<div className=\"form-row\" style={{ background: 'white' }}>\n\t\t\t\t\t\t<Col size={'md-4'} classes={'form-group'}>\n\t\t\t\t\t\t\t<label>Add New Medication</label>\n\t\t\t\t\t\t\t<Button className=\"fas fa-hand-point-right\" style={littlePointBtn} onClick={addDoses} />\n\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\tname=\"medication\"\n\t\t\t\t\t\t\t\t\tautoComplete=\"off\"\n\t\t\t\t\t\t\t\t\tstyle={input}\n\t\t\t\t\t\t\t\t\tvalue={text}\n\t\t\t\t\t\t\t\t\tonBlur={addDoses}\n\t\t\t\t\t\t\t\t\tonChange={target}\n\t\t\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t\t\t{renderSuggestions()}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t<Col size={'md-4'} classes={'form-group'}>\n\t\t\t\t\t\t\t<label>Select Dosage</label>\n\t\t\t\t\t\t\t<div>{renderDoses(doseChoices)}</div>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t<Col size={'md-2'}>\n\t\t\t\t\t\t\t<Button className=\"btn\" style={addBtn} type=\"submit\">\n\t\t\t\t\t\t\t\t{' '}\n\t\t\t\t\t\t\t\t<i className=\"fa fa-plus fa-2x mr-2\" />  Add\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</div>\n\t\t\t\t</form>\n\t\t\t\t<div className={'form-row'}>{renderEditMeds(data)}</div>\n\t\t\t</div>\n\t\t);\n\t} else {\n\t\treturn (\n\t\t\t<div className={'my-5 med-info'}>\n\t\t\t\t<em>\n\t\t\t\t\t<h5 style={{ textDecoration: 'underline' }}>{name ? `${name}'s` : ''} Medications:</h5>\n\t\t\t\t</em>\n\n\t\t\t\t<Col size={'md-12'} classes={'mt-5'}>\n\t\t\t\t\t<Button\n\t\t\t\t\t\tclassName=\"fas fa-user-edit fa-2x\"\n\t\t\t\t\t\tstyle={{ ...toggleBtn, color: 'white' }}\n\t\t\t\t\t\tonClick={toggleState}\n\t\t\t\t\t/>\n\t\t\t\t</Col>\n\t\t\t\t<form>\n\t\t\t\t\t<div className={'form-row'}>{renderMeds(data)}</div>\n\t\t\t\t</form>\n\t\t\t</div>\n\t\t);\n\t}\n}\nconst fieldText = {\n\t\tfontStyle: 'italic',\n\t\tfontWeight: '1000',\n\t\tpadding: '10px 10px 10px 0',\n\t\tcolor: 'black'\n\t},\n\tinput = {\n\t\tborderBottom: '1px solid rgba(0, 0, 0, .2)',\n\t\ttransition: 'all 0.30s ease-in-out'\n\t},\n\ttoggleBtn = {\n\t\tfloat: 'right',\n\t\tborder: 'none',\n\t\tmargin: '0',\n\t\tbackgroundColor: 'white'\n\t},\n\taddBtn = {\n\t\tmarginTop: '30px',\n\t\tcolor: '#214c91',\n\t\tfocus: 'none',\n\t\tsize: '10em'\n\t},\n\tlittlePointBtn = {\n\t\tborder: 'none',\n\t\tcolor: 'green',\n\t\tfloat: 'right',\n\t\tbackgroundColor: 'white'\n\t},\n\tremoveBtn = {\n\t\tbackgroundColor: 'white',\n\t\tborder: 'none',\n\t\tcolor: 'red'\n\t};\n","import React from 'react'\nimport { Col } from '../../components/Grid';\nimport { Input, Button } from '../../components/Forms';\n\n\nexport function NewContact({ target, toggleState, formSubmit }) {\n\n    return (\n    <div className={'my-5'}>\n        <Col size={'md-12'}>\n            <Button className=\"fas fa-backspace fa-2x\" style={cancelBtn} \n            onClick={toggleState} />\n        </Col>\n        <form onSubmit={formSubmit} >\n            <div className={\"form-row\"}>\n                <Col size={'md-4'} classes={'form-group'}>\n                    <label>Contact for</label>\n                    <Input name=\"contact\" \n                    placeholder=\"PCP, Pharmacy, etc..\"\n                    style={input}\n                    onChange={target} \n                    />\n                </Col>\n                <Col size={'md-4'} classes={'form-group'}>\n                    <label>Office or Business Name</label>\n                    <Input name=\"office\"\n                    placeholder=\"Vandelay Industries\"\n                    style={input}\n                    onChange={target} \n                    />\n                </Col>\n                <Col size={'md-4'} classes={'form-group'}>\n                    <label>Contact Name</label>\n                    <Input name=\"name\" \n                    placeholder=\"Art Vandelay\"\n                    style={input}\n                    onChange={target} \n                    />\n                </Col>\n            </div>\n            <div className=\"form-row\">\n                <Col size={'md-6'} classes={'form-group'}>\n                    <label>Address Line 1</label>\n                    <Input name=\"addressOne\"\n                    style={input}\n                    onChange={target} \n                    />                    </Col>\n                <Col size={'md-6'} classes={'form-group'}>\n                    <label>Address Line 2</label>\n                    <Input name=\"addressTwo\"\n                    style={input}\n                    onChange={target} \n                    />                    \n                </Col>\n            </div>\n            <div className=\"form-row\">\n                <Col size={'md-3'} classes={'form-group'}>\n                    <label>City</label>\n                    <Input name=\"city\"\n                    style={input}\n                    onChange={target} \n                    />\n                </Col>\n                <Col size={'md-3'} classes={'form-group'}>\n                    <label>State/Providence</label>\n                    <Input name=\"state\"\n                    style={input}\n                    onChange={target} \n                    />\n                </Col>\n                <Col size={'md-3'} classes={'form-group'}>\n                    <label>Zip/Postal Code</label>\n                    <Input name=\"zip\"\n                    style={input}\n                    onChange={target} \n                    />\n                </Col>\n                <Col size={'md-3'} classes={'form-group'}>\n                    <label>Country</label>\n                    <Input name=\"country\"\n                    style={input}\n                    onChange={target} \n                    />\n                </Col>\n            </div>\n            <div className=\"form-row\">\n                <Col size={'md-4'} classes={'form-group'}>\n                    <label>Primary Phone</label>\n                    <Input name=\"primaryPhone\"\n                    style={input}\n                    onChange={target} \n                    />\n                </Col>\n                <Col size={'md-2'} classes={'form-group'}>\n                    <label>Ext.</label>\n                    <Input name=\"primaryExt\"\n                    style={input}\n                    onChange={target} \n                    />\n                </Col>\n                <Col size={'md-4'} classes={'form-group'}>\n                    <label>Another Phone</label>\n                    <Input name=\"secondaryPhone\"\n                    style={input}\n                    onChange={target} \n                    />\n                </Col>\n                <Col size={'md-2'} classes={'form-group'}>\n                    <label>Ext.</label>\n                    <Input name=\"secondaryExt\"\n                    style={input}\n                    onChange={target} \n                    />\n                </Col>\n                </div>\n                <div className=\"form-row\">\n                <Col size={'md-4'} classes={'form-group'}>\n                    <label>Fax</label>\n                    <Input name=\"fax\"\n                    style={input}\n                    onChange={target} \n                    />\n                </Col>\n                <Col size={'md-4'} classes={'form-group'}>\n                    <label>Email</label>\n                    <Input name=\"email\"\n                    style={input}\n                    onChange={target} \n                    />\n                </Col>\n                <Col size={'md-4'} classes={'form-group'}>\n                    <label>Website</label>\n                    <Input name=\"website\"\n                    style={input}\n                    onChange={target} \n                    />\n                </Col>\n            </div>\n            <Col size={'md-12'}>\n            <Button className=\"btn\" style={saveBtn} \n                type=\"submit\" > <i className=\"fa fa-address-book mr-2\"/> {' '}  \n                    {' '} Save \n                </Button>\n            </Col>\n        </form>\n    </div> \n    )\n}\n\nconst cancelBtn = {\n    float: 'right',\n    border: 'none',\n    margin: '0',\n    color: 'tomato',\n    backgroundColor: 'white'\n},\nsaveBtn = {\n    float: 'right',\n    margin: '0',\n    backgroundColor: '#55595c',\n    color: 'white',\n},\ninput = {\n    borderBottom: '1px solid rgba(0, 0, 0, .2)',\n    transition: 'all 0.30s ease-in-out'\n}","import React, { useState } from \"react\";\nimport { Col } from \"../../components/Grid\";\nimport { NewContact } from \"../../components/NewContact\";\nimport { Input, Button } from \"../../components/Forms\";\n\nexport function Contacts({\n  data,\n  name,\n  target,\n  remove,\n  newContact,\n  toggleNew,\n  newTarget,\n  toggleState,\n  formSubmit\n}) {\n\n  const [ confirmed, isConfirmed ] = useState(false),\n\n    formatPhoneNumberLink = number => number ? number.replace(/[^\\d]/g, '') : \"\",\n  \n    getNewContact = nextContact => {\n      if (nextContact) {\n        return (\n          <NewContact\n            target={newTarget}\n            toggleState={toggleNew}\n            formSubmit={formSubmit}\n          />\n        );\n      }\n    },\n\n    confirmRemoval = i => {\n      if (confirmed) {\n        return (\n          <div className={\"remove\"}>\n            <Button\n              type=\"button\"\n              className=\"btn btn-danger\"\n              style={{ float: \"right\" }}\n              onClick={remove.bind(null, i, () => {isConfirmed(!confirmed)})}\n            >\n              <i className=\"fas fa-user-times\"> </i> Confirm Delete\n            </Button>\n            <Button\n              className=\"btn minus\"\n              style={{ float: \"left\" }}\n              onClick={() => {\n                isConfirmed(!confirmed);\n              }}\n            >\n              <i className=\"fas fa-ban\" /> Cancel\n            </Button>\n          </div>\n        );\n      } else {\n        return (\n          <div className={\"remove\"}>\n            <Button\n              className=\"btn minus\"\n              style={{ float: \"left\" }}\n              onClick={() => {\n                isConfirmed(!confirmed);\n              }}\n            >\n              <i className=\"fa fa-minus\" /> Remove Contact\n            </Button>\n          </div>\n        );\n      }\n    };\n\n  function renderContacts(contacts) {\n    return contacts.map((contact, i) => {\n      if (contact.edit) {\n        return (\n          <div key={i} className={\"mt-5\"}>\n            <Col size={\"md-12\"}>\n              <Button\n                className=\"fas fa-backspace fa-2x\"\n                style={confirmed ? { ...toggleBtn, color: \"white\" } : { ...toggleBtn, color: \"#d9534f\" }}\n                onClick={toggleState.bind(null, i)}\n              />\n            </Col>\n            <form>\n              <div className={\"form-row\"}>\n                <Col size={\"md-4\"} classes={\"form-group\"}>\n                  <label>Contact for</label>\n                  <Input\n                    value={contact.contact}\n                    name=\"contact\"\n                    placeholder=\"Dr, Pharmacy, etc..\"\n                    style={input}\n                    onChange={target(i)}\n                  />\n                </Col>\n                <Col size={\"md-4\"} classes={\"form-group\"}>\n                  <label>Office or Business Name</label>\n                  <Input\n                    value={contact.office}\n                    name=\"office\"\n                    style={input}\n                    onChange={target(i)}\n                  />\n                </Col>\n                <Col size={\"md-4\"} classes={\"form-group\"}>\n                  <label>Contact Name</label>\n                  <Input\n                    value={contact.name}\n                    name=\"name\"\n                    placeholder=\"Dr. Smith\"\n                    style={input}\n                    onChange={target(i)}\n                  />\n                </Col>\n              </div>\n              <div className=\"form-row\">\n                <Col size={\"md-6\"} classes={\"form-group\"}>\n                  <label>Address Line 1</label>\n                  <Input\n                    value={contact.addressOne}\n                    name=\"addressOne\"\n                    style={input}\n                    onChange={target(i)}\n                  />{\" \"}\n                </Col>\n                <Col size={\"md-6\"} classes={\"form-group\"}>\n                  <label>Address Line 2</label>\n                  <Input\n                    value={contact.addressTwo}\n                    name=\"addressTwo\"\n                    style={input}\n                    onChange={target(i)}\n                  />\n                </Col>\n              </div>\n              <div className=\"form-row\">\n                <Col size={\"md-3\"} classes={\"form-group\"}>\n                  <label>City</label>\n                  <Input\n                    value={contact.city}\n                    name=\"city\"\n                    style={input}\n                    onChange={target(i)}\n                  />\n                </Col>\n                <Col size={\"md-3\"} classes={\"form-group\"}>\n                  <label>{window.innerWidth > 992 ? 'State/Providence:' : 'State:'}</label>\n                  <Input\n                    value={contact.state}\n                    name=\"state\"\n                    style={input}\n                    onChange={target(i)}\n                  />\n                </Col>\n                <Col size={\"md-3\"} classes={\"form-group\"}>\n                  <label>Zip/Postal Code</label>\n                  <Input\n                    value={contact.zip}\n                    name=\"zip\"\n                    style={input}\n                    onChange={target(i)}\n                  />\n                </Col>\n                <Col size={\"md-3\"} classes={\"form-group\"}>\n                  <label>Country</label>\n                  <Input\n                    value={contact.country}\n                    name=\"country\"\n                    style={input}\n                    onChange={target(i)}\n                  />\n                </Col>\n              </div>\n              <div className=\"form-row\">\n                <Col size={\"md-4\"} classes={\"form-group\"}>\n                  <label>Primary Phone</label>\n                  <Input\n                    value={contact.primaryPhone}\n                    name=\"primaryPhone\"\n                    style={input}\n                    onChange={target(i)}\n                  />\n                </Col>\n                <Col size={\"md-2\"} classes={\"form-group\"}>\n                  <label>Ext.</label>\n                  <Input\n                    value={contact.primaryExt}\n                    name=\"primaryExt\"\n                    style={input}\n                    onChange={target(i)}\n                  />\n                </Col>\n                <Col size={\"md-4\"} classes={\"form-group\"}>\n                  <label>Another Phone</label>\n                  <Input\n                    value={contact.secondaryPhone}\n                    name=\"secondaryPhone\"\n                    style={input}\n                    onChange={target(i)}\n                  />\n                </Col>\n                <Col size={\"md-2\"} classes={\"form-group\"}>\n                  <label>Ext.</label>\n                  <Input\n                    value={contact.secondaryExt}\n                    name=\"secondaryExt\"\n                    style={input}\n                    onChange={target(i)}\n                  />\n                </Col>\n              </div>\n              <div className=\"form-row\">\n                <Col size={\"md-4\"} classes={\"form-group\"}>\n                  <label>Fax</label>\n                  <Input\n                    value={contact.fax}\n                    name=\"fax\"\n                    style={input}\n                    onChange={target(i)}\n                  />\n                </Col>\n                <Col size={\"md-4\"} classes={\"form-group\"}>\n                  <label>Email</label>\n                  <Input\n                    value={contact.email}\n                    name=\"email\"\n                    style={input}\n                    onChange={target(i)}\n                  />\n                </Col>\n                <Col size={\"md-4\"} classes={\"form-group\"}>\n                  <label>Website</label>\n                  <Input\n                    value={contact.website}\n                    name=\"website\"\n                    style={input}\n                    onChange={target(i)}\n                  />\n                </Col>\n              </div>\n              <div className=\"form-row\">\n                <Col size={\"md-12\"}>\n                  {confirmRemoval(i)}\n\n                  <Button\n                    className=\"btn\"\n                    style={confirmed ? { display: \"none\" } : updtBtn}\n                    onClick={toggleState.bind(null, i)}\n                  >\n                    <i className=\"fas fa-sync-alt mr-2\" />\n                    update\n                  </Button>\n                </Col>\n              </div>\n            </form>\n          </div>\n        );\n      } else {\n        return (\n          <div key={i} className={\"mt-5 contacts-info\"}>\n            <Col size={\"md-12\"} classes={\"contacts-edit\"}>\n              <Button\n                className=\"fas fa-user-edit fa-2x\"\n                style={{...toggleBtn, color: 'white'}}\n                onClick={ ()=>{\n                  isConfirmed(false); \n                  toggleState(i)\n                }}\n              />\n            </Col>\n            <form>\n              <div className={\"form-row\"}>\n                <Col size={\"md-4\"} classes={\"form-group\"}>\n                  <label>Contact for:</label>\n                  <div style={fieldText}>{contact.contact}</div>\n                </Col>\n                <Col size={\"md-4\"} classes={\"form-group\"}>\n                  <label>Office or Business Name:</label>\n                  <div style={fieldText}>{contact.office}</div>\n                </Col>\n                <Col size={\"md-4\"} classes={\"form-group\"}>\n                  <label>Contact Name:</label>\n                  <div style={fieldText}>{contact.name}</div>\n                </Col>\n              </div>\n              <div className=\"form-row\">\n                <Col size={\"md-6\"} classes={\"form-group\"}>\n                  <label>Address line 1:</label>\n                  <div style={fieldText}>{contact.addressOne}</div>\n                </Col>\n                <Col size={\"md-6\"} classes={\"form-group\"}>\n                  <label>Address line 2:</label>\n                  <div style={fieldText}>{contact.addressTwo}</div>\n                </Col>\n              </div>\n              <div className=\"form-row\">\n                <Col size={\"md-3\"} classes={\"form-group\"}>\n                  <label>City:</label>\n                  <div style={fieldText}>{contact.city}</div>\n                </Col>\n                <Col size={\"md-3\"} classes={\"form-group\"}>\n                  <label>{window.innerWidth > 992 ? 'State/Providence:' : 'State:'}</label>\n                  <div style={fieldText}>{contact.state}</div>\n                </Col>\n                <Col size={\"md-3\"} classes={\"form-group\"}>\n                  <label>Zip/Postal Code:</label>\n                  <div style={fieldText}>{contact.zip}</div>\n                </Col>\n                <Col size={\"md-3\"} classes={\"form-group\"}>\n                  <label>Country:</label>\n                  <div style={fieldText}>{contact.country}</div>\n                </Col>\n              </div>\n              <div className=\"form-row\">\n                <Col size={\"md-4\"} classes={\"form-group\"}>\n                  <label>Primary Phone:</label>\n                  <div style={{...fieldText, textDecoration: 'underline'}}>\n                  <a href={`tel:${formatPhoneNumberLink(contact.primaryPhone)}`}>{contact.primaryPhone}</a>\n                  </div>\n                </Col>\n                <Col size={\"md-2\"} classes={\"form-group\"}>\n                  <label>Ext:</label>\n                  <div style={fieldText}>{contact.primaryExt}</div>\n                </Col>\n                <Col size={\"md-4\"} classes={\"form-group\"}>\n                  <label>Another Phone:</label>\n                  <div style={{...fieldText, textDecoration: 'underline'}}>\n                  <a href={`tel:${formatPhoneNumberLink(contact.secondaryPhone)}`}>{contact.secondaryPhone}</a>\n                  </div>\n                </Col>\n                <Col size={\"md-2\"} classes={\"form-group\"}>\n                  <label>Ext:</label>\n                  <div style={fieldText}>{contact.secondaryExt}</div>\n                </Col>\n              </div>\n              <div className=\"form-row\">\n                <Col size={\"md-4\"} classes={\"form-group\"}>\n                  <label>Fax:</label>\n                  <div style={fieldText}>{contact.fax}</div>\n                </Col>\n                <Col size={\"md-4\"} classes={\"form-group\"}>\n                  <label>Email:</label>\n                  <div style={{...fieldText, textDecoration: 'underline'}}>\n                    <a href={`mailto:${contact.email}`}>{contact.email}</a>\n                    </div>\n                </Col>\n                <Col size={\"md-4\"} classes={\"form-group\"}>\n                  <label>Website:</label>\n                  <div style={{...fieldText, textDecoration: 'underline'}}> \n                  <a target=\"_blank\" rel=\"noreferrer noopener\" \n                    href={`https://${contact.website}`}>{contact.website}</a>\n                  </div>\n                </Col>\n              </div>\n            </form>\n          </div>\n        );\n      }\n    });\n  }\n\n  return (\n    <div className={\"my-5\"}>\n      <em>\n        <h5 style={{ textDecoration: \"underline\" }}>\n          Emergency or other contact Info {name ? `for ${name}` : ''}:\n        </h5>\n      </em>\n\n      {renderContacts(data)}\n\n      {getNewContact(newContact)}\n\n      <div className={\"add\"}>\n        <Button\n          className=\"btn plus\"\n          style={newContact ? { display: \"none\" } : { display: \"block\", float: 'right' }}\n          onClick={toggleNew}\n        >\n          <i className=\"fa fa-plus\" /> New Contact\n        </Button>\n      </div>\n    </div>\n  );\n}\n\nconst fieldText = {\n    fontStyle: \"italic\",\n    fontWeight: \"1000\",\n\t\tpadding: '10px 10px 10px 0',\n    color: \"black\"\n  },\n  input = {\n    borderBottom: \"1px solid rgba(0, 0, 0, .2)\",\n    transition: \"all 0.30s ease-in-out\"\n  },\n  updtBtn = {\n    float: \"right\",\n    margin: \"0\",\n    backgroundColor: \"#214c91\",\n    color: \"white\"\n  },\n  toggleBtn = {\n    float: \"right\",\n    border: \"none\",\n    margin: \"0\",\n    backgroundColor: \"white\"\n  };\n","import React, { useEffect, useState, useRef, useContext } from 'react';\nimport { useForceUpdate } from '../../utils/CustomHooks';\nimport PatientContext from '../../utils/PatientContext';\nimport { Container, Row, Col } from '../../components/Grid';\nimport { GeneralInfo } from '../../components/GeneralInfo';\nimport { HealthCard } from '../../components/HealthCard';\nimport { Conditions } from '../../components/Conditions';\nimport { Medications } from '../../components/Medications';\nimport { Contacts } from '../../components/Contacts';\nimport API from '../../utils/API';\n\nexport default function EHR({ location, setContext }) {\n\n/*\n    Globals\n*/ \n    let { patientId, name } = useContext(PatientContext);\n        patientId = patientId || location.state.patientId;\n  \n    const [ patient, setPatient ] = useState(patientId),\n        [generalInfo, setGeneralInfo] = useState({}),\n        [ healthInfo, setHealthInfo ] = useState({}),\n        [ conditions, setConditions ] = useState([]),\n        [ meds, setMeds ] = useState([]),\n        [ contacts, setContacts ] = useState([]),\n        [ medInput, setMedInput ] = useState(''),\n        [ newContact, setNewContact ] = useState({}),\n        [ addContact, setAddContact ] = useState(false),\n        [ editGenState, setGenState ] = useState(false),\n        [ editHealthState, setHealthState ] = useState(false),\n        [ editConditState, setConditState ] = useState(false),\n        [ editMedsState, setMedsState ] = useState(false),\n        [ conditSuggestions, setConditSuggestions ] = useState([]),\n        [ medSuggestions, setMedSuggestions ] = useState([]),\n        [ doses, setDoses ] = useState(''),\n        [ query, setQuery ] = useState(''),\n\n        forceUpdate = useForceUpdate(), \n        isInitialMount = useRef(true);\n\n/*\n    EHR Setup and Initialization\n*/ \n    //Use this effect to only load patient on initial mount. And update db only on subsequent mounts. \n    useEffect(() => {  \n        if (isInitialMount.current) {\n            isInitialMount.current = false;\n            getPatient()\n        } else {\n            updateDB()\n         }\n    }, [generalInfo, healthInfo, conditions, meds, contacts]);\n\n    const getPatient = async() => {\n        if (location.state.patientId === \"\") {\n            newPatient()\n        } else {\n        const { data } = await API.fetchPatient(patient)\n            setGeneralInfo(data.patientData)\n            setHealthInfo(data.healthData)\n            setConditions(data.healthConditions)\n            setMeds(data.medications)\n            setContacts(data.contacts)\n        } \n    },\n\n     //if no patient is passed in, create a new one on the server.\n    newPatient = async() => {\n        const { data: patient }  = await API.getUser(),\n            email = patient.user.email;\n   \n        const newPatient = {email, generalInfo, healthInfo, conditions, meds, contacts},\n         { data } = await API.addPatient(newPatient);\n\n        setPatient(data._id);\n        setGenState(true)\n        setHealthState(true)\n    },\n\n/*\n    State and database management\n*/ \n    updateDB = e => {\n        if(e) {\n            e.preventDefault()\n            setGenState(false)\n            setHealthState(false)\n        }\n        const data = {generalInfo, healthInfo, conditions, meds, contacts}\n        \n        API.updateEHR(patient, data)\n            .catch(err => console.log(err))       \n    }\n\n    useEffect(() => {\n        const setNameInNavbar = () => {\n            let { firstName, nickname } = generalInfo,\n            name = nickname || firstName;\n    \n            setContext({ patientId: patient, name })\n        }\n        setNameInNavbar()\n    }, [generalInfo])\n\n    const onGenInfoInputChange = e => {\n        const { name, value } = e.target;\n        setGeneralInfo({ ...generalInfo, [name]: value })\n    }, \n\n    onHealthInfoInputChange = e => {\n        const { name, value } = e.target;\n        setHealthInfo({ ...healthInfo, [name]: value })\n    },\n\n    newContactInputChange = e => {\n        const { name, value } = e.target;\n        setNewContact({...newContact, [name]: value})\n    }, \n    \n    onConditInputChange = async e => {\n      const { value } = e.target,\n       items = await getConditionNames(value);\n\n      let suggestions = [];\n       \n      if (value.length > 0) {\n          const regex = new RegExp(`^${value}`, 'i');\n          suggestions = items.sort().filter( x => regex.test(x));\n        } \n        setConditSuggestions({ suggestions, text: value })\n     }\n\n     // 1/2 second delay after typing finishes before API and other code is executed.  \n     useEffect(() => {\n        const timeThisOut = setTimeout(() => setMedInput(query), 500);\n        return () => clearTimeout(timeThisOut);\n      }, [query]);\n    \n    const onMedInputChange = async e => {\n            const { name, value } = e.target; \n            setQuery({ ...query, [name]: value })\n            \n        //only run this when medication changes. ignore dosage.\n        if (name === 'medication') {\n        try {           \n        const items = await getMedNames(value)\n        let suggestions = [];\n\n        if (value.length > 0) {\n            const regex = new RegExp(`^${value}`, 'i');\n            suggestions = items.sort().filter( x => regex.test(x)).slice(0, 8)\n            } \n            setMedSuggestions({ suggestions, text: value })\n        } catch (err) {return}\n        } \n    },\n\n    onContactChange = index => e => {\n        const { name, value } = e.target,\n        clone = [...contacts],\n        edit = clone[index];\n        \n        forceUpdate();\n        \n        for (let key in edit) {\n\n            if (key === name) {\n                edit[key] = value;\n            } else if (!edit.hasOwnProperty(name)) {\n                edit[name] = value;\n            }\n        }\n        clone.splice(index, 1, edit)\n        setContacts(clone)\n    }, \n     \n     onConditDescChange = index => e => {\n        const { value } = e.target,\n          clone = [...conditions];\n\n        forceUpdate();\n\n         const newDescription = {\n            name: conditions[index].name,\n            edit: conditions[index].edit,\n            createdAt: conditions[index].createdAt || Date.now(),\n            description: value\n        }\n        clone.splice(index, 1, newDescription)\n        setConditions(clone)\n    }, \n\n    toggleDescriptionEdit = index => {\n\n        const arr = conditions.reduce((acc, cur, i) => {\n            cur.edit = i === index ? !cur.edit : false;\n            acc.push(cur);\n            return acc;\n        }, [])\n        setConditions(arr)\n    },\n\n    toggleContactEdit = index => {\n\n        const arr = contacts.reduce((acc, cur, i) => {\n            cur.edit = i === index ? !cur.edit : false;\n            acc.push(cur);\n            return acc;\n        }, [])\n        setContacts(arr)\n    },\n\n    addCondition = async e => {\n        e.preventDefault();\n        e.target.reset();\n        \n        let { text } = conditSuggestions;\n        setConditSuggestions([]);\n\n        if (!text) return;\n        const [ search ]  = text.split('-'),\n        { data: [ suggest ] } = await API.fetchCondition(search),\n\n        description = (suggest && suggest.shortdef) ? suggest.shortdef.join('\\n') : suggest,\n\n            newCondition = { \n                name: capitalizeWord(text), \n                description, \n                edit: false, \n                createdAt: Date.now()\n            }\n        setConditions([...conditions, newCondition])\n    },\n\n    addMeds = e => {\n        e.preventDefault();\n        e.target.reset();\n\n        let { text } = medSuggestions;\n        if (!text) return\n        \n        try {\n           text = text.split(' ')\n\n            const newMed = {\n                medication: capitalizeWord(text[0]),\n                dosage: medInput.dosage,\n                edit : false,\n                createdAt: Date.now()\n            }\n        setMeds([...meds, newMed])\n        setDoses('')\n        setQuery('')\n        setMedSuggestions([])\n        } catch(err) {return}\n    },\n\n    addNewContact = e => {\n        e.preventDefault();\n        setAddContact(false)\n        \n        setContacts([...contacts, newContact])\n    },\n\n    removeCondition = index => {\n        const clone = [...conditions];\n\n        clone.splice(index, 1)\n        setConditions(clone)\n    },\n\n    removeMed = index => {\n        const clone = [...meds];\n        \n        clone.splice(index, 1)\n        setMeds(clone)\n    },\n\n    removeContact = index => {\n        const clone = [...contacts];\n\n        clone.splice(index, 1)\n        setContacts(clone)\n    },\n\n/*\n    Features Management\n*/ \n    capitalizeWord = word => word.replace(/\\b[a-z]/g, char => char.toUpperCase()),\n\n    getConditionNames = async search => {\n        const { data } = await API.getConditionNames(search);\n        return  data[3].map( x => x[0]);\n    },\n\n     getMedNames = async search => {\n        const { data: { displayTermsList} }  = await API.getMedNames(search);\n        return displayTermsList.term;  \n    },\n\n    selectSuggestedCondit = async value => {\n        setConditSuggestions({ suggestions: [], text: value })\n\n        //auto add condition when selected autocomplete value is clicked.    \n        if (!value) return;\n        \n        const [ search ]  = value.split('-'),\n            { data: [ suggest ] } = await API.fetchCondition(search),\n    \n        description = (suggest && suggest.shortdef) ? suggest.shortdef.join('\\n') : suggest,\n\n            newCondition = { \n                name: capitalizeWord(value), \n                description, \n                edit: false, \n                createdAt: Date.now()\n            }\n        setConditions([...conditions, newCondition])\n        setConditSuggestions({text: ''})\n    },\n\n    renderConditSuggestions = () => {\n        const { suggestions } = conditSuggestions;\n        \n        if (!suggestions || suggestions.length === 0) {\n            return;\n        }\n        return (\n            <ul>\n                {suggestions.map( (suggestion, i) => <li onClick={() => selectSuggestedCondit(suggestion)} key={i}>{suggestion}</li>)}\n            </ul>\n        )\n    },\n\n    selectSuggestedMed = async value => {\n        setMedSuggestions({ suggestions: [], text: value })\n        \n        //populate dosage choices with suggestions when autocomplete option is clicked\n        if (!value) return;\n        try {\n            const { data: { drugGroup } } = await API.fetchMeds(value),\n              doses = drugGroup.conceptGroup[1].conceptProperties.map(({ synonym })=> synonym).filter(x => x !== '')\n           \n            setDoses(doses)\n        } catch(err) {return}\n    },\n\n    renderMedSuggestions = () => {\n        const { suggestions } = medSuggestions;\n        \n        if (!suggestions || suggestions.length === 0) {\n            return;\n        }\n        return (\n            <ul>\n                {suggestions.map((suggestion, i) => <li onClick={() => selectSuggestedMed(suggestion)} key={i}>{suggestion}</li>)}\n            </ul>\n        )\n    },\n\n    //populate dosage choices when finger button is clicked\n    addDoses = async e => {\n        e.preventDefault();\n\n        const { text } = medSuggestions;\n        \n        if (!text) return;\n        try {\n            const { data: { drugGroup } } = await API.fetchMeds(text),\n              doses = drugGroup.conceptGroup[1].conceptProperties.map(({ synonym })=> synonym).filter(x => x !== '')\n            \n            setDoses(doses)   \n        } catch(err) {return}\n    }\n\n\n    return (\n        <Container>\n            <Row classes={'my-5'}>\n                <Col size={'md-8'} classes={'offset-md-2'}>\n                    <GeneralInfo\n                        toggleState={() => setGenState(!editGenState)}\n                        editState={editGenState}\n                        data={generalInfo}\n                        target={onGenInfoInputChange}\n                        formSubmit={updateDB}\n                        name={name}\n                    />\n                </Col>\n            </Row>\n            <Row classes={'my-5'}>\n                <Col size={'md-8'} classes={'offset-md-2'}>\n                    <HealthCard\n                        toggleState={() => setHealthState(!editHealthState)}\n                        editState={editHealthState}\n                        data={healthInfo}\n                        target={onHealthInfoInputChange}\n                        formSubmit={updateDB}\n                        name={name}\n                    />\n                </Col>\n            </Row>\n            <Row classes={'my-5'}>\n                <Col size={'md-8'} classes={'offset-md-2'}>\n                    <Conditions\n                        toggleState={() => setConditState(!editConditState)}\n                        editState={editConditState} \n                        toggleDescState={toggleDescriptionEdit}\n                        remove={removeCondition}\n                        areaTarget={onConditDescChange}\n                        data={conditions}\n                        target={onConditInputChange}\n                        renderSuggestions={renderConditSuggestions}\n                        text={conditSuggestions.text}\n                        formSubmit={addCondition}\n                        name={name}\n                      />\n                </Col>\n            </Row>\n            <Row classes={'my-5'}>\n                <Col size={'md-8'} classes={'offset-md-2'}>\n                    <Medications\n                        toggleState={() => setMedsState(!editMedsState)}\n                        editState={editMedsState}\n                        data={meds}\n                        target={onMedInputChange}\n                        renderSuggestions={renderMedSuggestions}\n                        text={medSuggestions.text}\n                        otherDosage={medInput.dosage}\n                        remove={removeMed}\n                        addDoses={addDoses}\n                        doseChoices={doses}\n                        formSubmit={addMeds}\n                        name={name}\n                      />\n                </Col>\n            </Row>\n            <Row classes={'my-5'}>\n                <Col size={'md-8'} classes={'offset-md-2'}>\n                    <Contacts\n                        toggleNew={() => setAddContact(!addContact)}\n                        toggleState={toggleContactEdit}\n                        newContact={addContact}\n                        data={contacts}\n                        target={onContactChange}\n                        remove={removeContact}\n                        newTarget={newContactInputChange}\n                        formSubmit={addNewContact}\n                        name={name}\n                    />\n                </Col>\n            </Row>\n        </Container>\n    )\n}","import React, { useState, useContext, useRef, useEffect } from 'react';\nimport { Container, Row, Col } from '../../components/Grid';\nimport { Contacts as ForwardThis } from '../../components/Contacts';\nimport { useForceUpdate } from '../../utils/CustomHooks';\nimport PatientContext from '../../utils/PatientContext';\nimport API from '../../utils/API';\n\n\nexport default function Contacts({ location }) {\n\n     const [ contacts, setContacts ] = useState([]),\n        [ newContact, setNewContact ] = useState({}),\n        [ addContact, setAddContact ] = useState(false),\n        [ generalInfo, setGeneralInfo ] = useState({}),\n        [ healthInfo, setHealthInfo ] = useState({}),\n        [ conditions, setConditions ] = useState([]),\n        [ meds, setMeds ] = useState([]),\n\n        forceUpdate = useForceUpdate(),\n        isInitialMount = useRef(true);\n\n        let { patientId, name } = useContext(PatientContext);\n        patientId = patientId || location.state.patientId;\n\n\n    //Use this effect to only load patient on initial mount. And update db only on subsequent mounts. \n    useEffect(() => {   \n        if (isInitialMount.current) {\n            isInitialMount.current = false;\n            getPatient()\n        } else {\n            updateDB()\n         }\n    }, [contacts]);\n\n    const getPatient = async() => {\n        if (!patientId) return\n       \n        const { data } = await API.fetchPatient(patientId)\n            \n        setGeneralInfo(data.patientData)\n        setHealthInfo(data.healthData)\n        setConditions(data.healthConditions)\n        setMeds(data.medications)\n        setContacts(data.contacts)\n    },\n\n    updateDB = () => { \n        const data = {generalInfo, healthInfo, conditions, meds, contacts}\n\n        API.updateEHR(patientId, data)\n            .catch(err => console.log(err))         \n    },\n\n    newContactInputChange = e => {\n        const { name, value } = e.target;\n        setNewContact({...newContact, [name]: value})\n    }, \n\n    onContactChange = index => e => {\n        const { name, value } = e.target,\n        clone = [...contacts],\n        edit = clone[index];\n        \n        forceUpdate();\n\n        for (let key in edit) {\n\n            if (key === name) {\n                edit[key] = value;\n            } else if (!edit.hasOwnProperty(name)) {\n                edit[name] = value;\n            }\n        }\n        clone.splice(index, 1, edit)\n        setContacts(clone)\n    },\n\n    toggleContactEdit = index => {\n\n        const arr = contacts.reduce( (acc, cur, i) => {\n            cur.edit = i === index ? !cur.edit : false;\n            acc.push(cur);\n            return acc;\n        }, [])\n        setContacts(arr)\n    },\n\n    addNewContact = e => {\n        e.preventDefault();\n        setAddContact(false)\n\n        const list = contacts.concat(newContact);\n        setContacts(list)\n    },\n\n    removeContact = index => {\n        const clone = contacts;\n\n        clone.splice(index, 1)\n        setContacts([...clone])\n    };\n\n    return (\n        <Container>\n            <Row classes=\"my-5\">\n                <Col size={'md-8'} classes={'offset-md-2'}>\n                    <ForwardThis\n                    toggleNew={() => setAddContact(!addContact)}\n                    toggleState={toggleContactEdit}\n                    newContact={addContact}\n                    data={contacts}\n                    target={onContactChange}\n                    remove={removeContact}\n                    newTarget={newContactInputChange}\n                    formSubmit={addNewContact}\n                    name={name}\n                    />\n                </Col>\n             </Row>\n        </Container>\n    )\n}\n","import React, { useState, useContext } from 'react';\nimport { Link, useLocation, useHistory } from 'react-router-dom';\nimport PatientContext from '../../utils/PatientContext';\nimport { Button } from '../Forms';\nimport { Collapse } from '../Grid';\nimport Auth from '../../Auth';\n\nexport default function navBar() {\n\n    let [navLinks, showNavLinks] = useState(false),\n    history = useHistory(),\n    { pathname } = useLocation(),\n    { patientId, name } = useContext(PatientContext),\n        \n\n    // hide or show links when screen width is small\n     toggleNav = () => showNavLinks(navLinks = !navLinks),  \n\n     logout = () => Auth.logout(() => {history.push(\"/\")}),\n    \n     getButtons = () => {\n        if(Auth.isAuthenticated()) {\n            return (\n                <Button className={'btn btn-outline-primary m-2'} type='button'\n                    onClick={logout} >\n                    Log Out\n                </Button>\n        )\n        } else {\n            return (\n                <div>\n                    <Link to='/signin' >\n                                <Button className={'btn btn-outline-primary m-2'} type='button'>\n                                    Log In\n                                </Button>\n                            </Link>\n                    <Link to='/signup' >\n                        <Button className={'btn btn-outline-primary m-2'} type='button'>\n                            Sign Up\n                            </Button>\n                    </Link>\n                </div>\n                )\n            }\n     }\n  \n\n    return (\n        <nav className={'navbar navbar-expand-lg navbar-light bg-light'}>\n            <Link to='/' className={'navbar-brand'}><em>my</em>EHR</Link>\n            <button onClick={toggleNav} className={'navbar-toggler'} type=\"button\" data-toggle=\"collapse\" data-target=\"#target-collapse\" >\n            <span className=\"navbar-toggler-icon\"></span>\n            </button>\n\n            <Collapse navState={navLinks} id={'target-collapse'}>\n              <ul className=\"navbar-nav mr-auto\">\n                <li className={pathname === \"/\" ? \"nav-item active\" : \"nav-item\"}>\n                    <Link to=\"/\" className={'nav-link'}>\n                        Home\n                    </Link>\n                </li>\n                <li className={pathname === \"/patients\" ? \"nav-item active\" : \"nav-item\"}\n                    style={Auth.isAuthenticated() ? {display: 'block'} : {display: 'none'}} >\n                    <Link to=\"/patients\" className={'nav-link'}>\n                        Saved health records\n                    </Link>\n                </li>\n                <li className={pathname === \"/ehr\" ? \"nav-item active\" : \"nav-item\"}\n                    style={pathname === \"/ehr\" || pathname === \"/contacts\" ? {display: 'block'} : {display: 'none'}} >\n\n                    <Link to={{pathname:\"/ehr\", state: { patientId, name }}} className={'nav-link'} >\n                       {name ? `${name}'s` : ''} EHR\n                    </Link>    \n                </li>\n                <li className={pathname === \"/contacts\" ? \"nav-item active\" : \"nav-item\"}\n                    style={pathname === \"/ehr\" || pathname === \"/contacts\" ? {display: 'block'} : {display: 'none'}}  >\n\n                    <Link to={{pathname:\"/contacts\", state: { patientId, name }}} className={'nav-link'} >\n                    {name ? `${name}'s` : ''} Contacts\n                    </Link>    \n                </li>\n              </ul>\n              \n                { getButtons() }\n\n            </Collapse>\n        </nav>\n    )\n}\n\n","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport Auth from './Auth'\n\nexport default function ProtectedRoute({ component: Component, ...rest}) {\n    return (\n        <Route \n            {...rest}  \n                render={props => { \n                if(Auth.isAuthenticated()) {\n                    \n                    return <Component {...rest} {...props} />\n                } else{ \n                    return <Redirect to={\n                        {\n                            pathname: '/',\n                            state: {\n                                from: props.location\n                            }\n                        }\n                    } />\n                }\n        }  }\n       />\n    )\n}\n","import React, { useState } from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport Landing from \"./pages/Landing\";\nimport SignIn from \"./pages/SignIn\";\nimport SignUp from \"./pages/SignUp\";\nimport Patients from \"./pages/Patients\";\nimport EHR from \"./pages/EHR\";\nimport Contacts from './pages/Contacts';\nimport NavBar from './components/Navbar';\nimport ProtectedRoute from './ProtectedRoute';\nimport PatientContext from './utils/PatientContext';\nimport './assets/css/bootstrap.min.css';\nimport \"./App.css\";\n\n\nexport default function App() {\n  \n  const [ patient, setPatient ] = useState({}),\n    { Provider } = PatientContext,\n\n  setPatientContext = patient => setPatient(patient);\n\n  return (\n    <Router>\n      <Provider value={patient} >\n        <Route path=\"/\"><NavBar /> </Route>\n        <Route exact path=\"/\"> <Landing /> </Route>\n        <Route exact path=\"/signin\"> <SignIn /> </Route>\n        <Route exact path=\"/signup\"> <SignUp /> </Route>\n        <ProtectedRoute exact path=\"/patients\" \n        component={Patients} \n        setContext={setPatientContext}  \n        /> \n        <ProtectedRoute exact path=\"/ehr\" \n        component={EHR} \n        setContext={setPatientContext}\n        />\n        <ProtectedRoute exact path=\"/contacts\" component={Contacts} />\n      </Provider>\n    </Router>\n  )\n}","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log(\"New content is available; please refresh.\");\n            } else {\n              // At this point, everything has been pre-cached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport registerServiceWorker from \"./registerServiceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nregisterServiceWorker();\n"],"sourceRoot":""}